(load "ch4-analyzingmceval.scm")

(define (let? exp)
  (tagged-list? exp 'let))

(define (let-bindings exp)
  (cadr exp))
(define (let-body exp)
  (cddr exp))
(define (analyze-let exp)
  (let ((binds (let-bindings exp))
        (body (let-body exp)))
    (expand-let binds body)))
(define (let-vars bindings)
  (map car bindings))
(define (let-values bindings)
  (map cadr bindings))
(define (expand-let bindings body)
  (append (list (make-lambda (let-vars bindings) body))
          (let-values bindings)))

(define (analyze exp)
  (cond ((self-evaluating? exp) 
         (analyze-self-evaluating exp))
        ((quoted? exp) (analyze-quoted exp))
        ((variable? exp) (analyze-variable exp))
        ((assignment? exp) (analyze-assignment exp))
        ((definition? exp) (analyze-definition exp))
        ((if? exp) (analyze-if exp))
        ((lambda? exp) (analyze-lambda exp))
          ((begin? exp) (analyze-sequence (begin-actions exp)))
        ((cond? exp) (analyze (cond->if exp)))
        ((let? exp) (analyze (analyze-let exp)))
        ((application? exp) (analyze-application exp))
        (else
         (error "Unknown expression type -- ANALYZE" exp))))

; test
;(define the-global-environment (setup-environment))
;(eval '(let ((a 1) (b 2)) (set! a 3) (+ a b)) the-global-environment)
