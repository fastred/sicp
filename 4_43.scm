; Specification:
;(barnacle-yacht 'gabrielle)
;(moore-yacht 'lorna)
;(hall-yacht 'rosalind)
;(downing-yacht 'melissa)
;(parker-yacht 'mary)
(define (daughters)
  (let ((moore 'mary)
        (barnacle 'melissa))
    (let ((downing (amb 'gabrielle 'lorna 'rosalind))
          (hall (amb 'gabrielle 'lorna))
          (parker (amb 'lorna 'rosalind)))
      (cond ((eq? hall 'gabrielle)
             (require (eq? parker 'rosalind)))
            ((eq? downing 'gabrielle)
             (require (eq? parker 'melissa)))
            (else (require false)))
      (require
        (distinct? (list moore barnacle hall downing parker)))
      (list (list 'moore moore)
            (list 'barnacle barnacle)
            (list 'hall hall)
            (list 'downing downing)
            (list 'parker parker)))))

; Solution:
;((moore mary) (barnacle melissa) (hall gabrielle) (downing lorna) (parker rosalind))

(define (daughters2)
  (let ((barnacle 'melissa))
    (let ((moore (amb 'mary 'gabrielle 'rosalind))
          (downing (amb 'mary 'gabrielle 'lorna 'rosalind))
          (hall (amb 'mary 'gabrielle 'lorna))
          (parker (amb 'lorna 'rosalind)))
      (cond ((eq? hall 'gabrielle)
             (require (eq? parker 'rosalind)))
            ((eq? moore 'gabrielle)
             (require (eq? parker 'lorna)))
            ((eq? downing 'gabrielle)
             (require (eq? parker 'melissa)))
            (else (require false)))
      (require
        (distinct? (list moore barnacle hall downing parker)))
      (list (list 'moore moore)
            (list 'barnacle barnacle)
            (list 'hall hall)
            (list 'downing downing)
            (list 'parker parker)))))

; Solutions:
;((moore mary) (barnacle melissa) (hall gabrielle) (downing lorna) (parker rosalind))
;((moore gabrielle) (barnacle melissa) (hall mary) (downing rosalind) (parker lorna))
